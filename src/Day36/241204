* 변수
    1. 변수 : 하나의 데이터를 저장할 수 있는 메모리 공간(논리적 공간)
    2. 변수명 : 메모리 공간의 상징적인 이름
    3. 변수종류
       - 지역변수 : 특정한 { } 안에서 선언한 변수, 함수{}, if{}, for{}
            -> 선언된 { } 밖으로 호출이 불가능

       - 전역변수 : 선언될 때 static 키워드가 붙은 변수
            -> 프로젝트내 모든 클래스에서 호출이 가능

       - 매개변수 : 함수 호출시 인자값을 함수에 대입하는 변수
            -> 중매(매) : 매개변수, 인자값 <---> 변수(매개변수)
            -> 함수내에서만 사용 가능한 변수
            -> 타입 일치해서 대입

       - 멤버변수 : 클래스안에 존재하고 함수밖에 존재하는 변수
            -> 멤버(객체의 멤버)
            -> 객체가 생성될 때 같이 생성되는 변수, 객체를 통해 접근가능한 변수
            -> 2가지 :
                1. 다른 클래스 사용시에서 지정한 멤버변수를 호출시
                   클래스 변수 = new 클래스();
                   번수.멤버변수;

                2. 같은 클래스내 멤버변수 호출시
                    this.멤버변수;

       ※ 주의할 점 : 변수는 참조라는걸 이용해서 하나의 값을 기차처럼 연결/참조 하는 구조
                   -> 메모리의 효율성을 극대화 하기 위해
       Example1 변수 = new Example();
            1. 변수는 하나의 객체를 참조한다.
            2. 객체는 각 멤버변수들을 참조한다.
            3. 각 멤버변수들은 각 값/객체를 참고한다.

       변수 -----> Example1 객체 -----> 멤버변수 -----> 40
                                -----> 멤버변수2 -----> 50
                                -----> 전역변수 -----> 20

       변수 -----> 배열 -----> [0]
                       -----> [1]
                       -----> [2]


* 기본타입 과 참조타입 구분하는 방법
    1. 기본타입 => 리터럴 저장하면, byte, int, short, long, double, float, boolean , char
    2. 참조타입 => 주소 저장하면, 배열[], 클래스, 인터페이스, 열거


* 배열(문법)
    1. 나열 : 차례대로 쭉 벌여 늘어놓다
    2. 배열 : 순서대로 번호가 붙인 원소들이 연속적인 형태로 구성한 데이터 타입
              동일한 자료타입의 자료들을 묶음 [참조타입]
    3. 인덱스 : 순서대로 붙인 번호, 0부터 시작
    ★ 자바의 배열은 하나의 타입의 자료 여러개 저장!
    ★ 고정길이(동적할당 못한다. 크기(길이)가 작았다 커졌다 못한다)
        -> 서로 다른 타입의 자료 여러개를 저장 X/O
        -> 방법 : 클래스안에 서로 다른 타입의 자료 구성해서 객체로 사용
    4. 객체 : 서로 다른 자료타입의 자료들을 묶음 [참조타입]


* 컬렉션프레임워크 : 객체기반의 여러 자료들을 저장하는 방법/함수 지원하는 클래스들
    1. LIST
        - ArrayList(클래스)
          : 동일한 자료타입의 자료들을 묶음 [참조타입]
        ★ 가변길이(동적할당 가능, 크기(길이)가 작았다 커졌다 가능)
    2. SET
    3. MAP


















