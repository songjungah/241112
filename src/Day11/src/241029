* 상위 클래스 : 보다 일반적인 개념 / ex) Animal
* 하위 클래스 : 보다 구체적인 개념 / ex) Bird, Tiger, Human

* 다형성
1. 다운 캐스팅과 instanceof [ instanceof 는 다운캐스팅에서 쓰임 ]
   - 캐스팅 : 형변환
   - 다운 캐스팅 : 상위 클래스 자료형 -> 하위 클래스 자료형 변환 / 객체의 출처 체크가 필요 !
   - 업 캐스팅 : 하위 클래스 자료형 -> 상위 클래스 자료형 변환 / 자동 형변환(★다형성!)

* 참조변수 instanceof 클래스 자료형
- 참조 변수가 가리키고 있는 객체의 출처가 클래스 자료형인지...
- instanceof 참조하는 주소가 모두 같은 객체인가 체크
ex) ad instanceof D - ad가 가리키고 있는 객체의 출처라 D로 유지되었는가?


※참고)
   애노테이션(Annotation)
   - 주석, 주해, 설명,,,
   - @ : 애노테이션



매서드 재정의
1. 메소드 재정의
   - @Override 애노테이션
   - 이 메서드가 재정의된 메서드임을 컴파일러에게 알려주는 정보
   - 접근 제어자는 재정의시 더 넓은 범위로 정의 가능
      default -> default, protected, public
      protected -> protected, public

2. 묵시적 형변환과 메서드 재정의
3. 가상메서드 테이블




추상 클래스
   - 추상적 : 정해지지 않은, 공통적인
   - 구체적 : 정해진

1. 추상 클래스란? [ 변수는 통제가 X ]
   - 메서드의 수행 내용이(구현체가) 정해지지 않은 메서드가 포함된 클래스
   - 메서드가 통제할 수 있는 수단!

2. 추상클래스 문법
   - 클래스 예약어 앞에 abstract, 메서드 반환값 앞에 abstract 를 입력함
   - 하위 클래스의 상속을 통한 객체 생성
★ 추상 메서드 = 설계 도구

3. 공통 자원을 정의

※ 상속은 객체 생성과 관련이 되어있음 > 상속을 통해서 객체 자원을 공유하게 됨 > 인스턴스 자원&인스턴스 메서드


final 예약어
   - 최종적, 마지막
   - 변경 불가

1. 변수 : 상수
   - final int num = 10; > 변경 불가
★2. 메서드
   - 메서드를 변경하는 방법? : 메서드 재정의
   - final 이 추가되면, 메서드 재정의 불가
★3. 클래스
   - 클래스의 정의를 변경하는 방법? : 상속
   - final 이 추가되면, 상속 불가