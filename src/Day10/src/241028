상속
1. 상속이란?

2. 클래스의 상속
3. 클래스 상속 문법

class 자식 클래스 extends 부모 클래스 {

}

5. super
   - this 와 비슷하지만, 적용 대상이 다르다
   - ★this 는 현재 클래스의 객체가 대상
   - ★super 는 상위 클래스의 객체가 대상

   * 지역변수
      - 부모 클래스의 객체의 주소값 > 부모 클래스의 객체 자원을 접근하기 위한 목적(부모쪽 객체의 인스턴스 변수, 인스턴스 메서드)
   * 메서드
      - 부모 클래스에 정의된 생성자 메서드
      - super( ) : 부모 클래스의 기본 생성자
      - super(...) : 부모 클래스의 매개변수가 있는 생성자


   ※참고)
   this > 인스턴스 메서드의 지역변수
	- 현재 클래스의 생성된 객체의 주소값, 인스턴스 메서드 내부에서 객체의 자원을 접근하기 위한 목적

   this > 메서드
	- 현재 클래스의 생성자 메서드
	- this( ) : 기본 생성자 호출
	- this(...) : 매개변수가 있는 생성자 호출

※ C( ) -> super( ) = B( ) -> super( ) = A( )


* 상위 클래스 : 보다 일반적인 개념 / ex) Animal
* 하위 클래스 : 보다 구체적인 개념 / ex) Bird, Tiger, Human

* 다형성
1. 다운 캐스팅과 instanceof [ instanceof 는 다운캐스팅에서 쓰임 ]
   - 캐스팅 : 형변환
   - 다운 캐스팅 : 상위 클래스 자료형 -> 하위 클래스 자료형 변환 / 객체의 출처 체크가 필요 !
   - 업 캐스팅 : 하위 클래스 자료형 -> 상위 클래스 자료형 변환 / 자동 형변환(★다형성!)

* 참조변수 instanceof 클래스 자료형
- 참조 변수가 가리키고 있는 객체의 출처가 클래스 자료형인지...
- instanceof 참조하는 주소가 모두 같은 객체인가 체크
ex) ad instanceof D - ad가 가리키고 있는 객체의 출처라 D로 유지되었는가?


매서드 재정의
1. 메소드 재정의
2. 묵시적 형변환과 메서드 재정의
3. 가상메서드 테이블
