[ 입출력 ] : 입력(컴퓨터 안으로) 과 출력(컴퓨터 밖으로)
[ 파일 ] : 컴퓨터에 쓰이는 데이터들을 모아놓은 것
[ 데이터 ] : 자료
[ 스트림 ] : 컴퓨터내 데이터/자료 가 다니는 통로
            - 데이터가 다니는 통로인 스트림은 바이트 단위로 이동한다.
            - 자바(JVM : 자바 가상메모리) <--- 스트림(데이터/바이트) ---> 윈도우(c:)
                // JVM(휘발성 : 프로그램 종료시 초기화)
                // 윈도우(비휘발성 : 영구저장)
            - 영문/특수문자 1글자당 : 1바이트, 한글 : 2바이트

[ 바이트 ] : 컴퓨터가 처리하는 용량 단위
            1) 비트 : 0 또는 1
            2) 바이트 : 0 1 0 1 0 1 ( 8개 bit -> 1 byte )
            3) 1024byte -> 1KB -> 1024kb -> 1MB -> 1024MB -> 1GB
            ※ 주로 영문(아스키코드)은 1바이트, 한글(유니코드-java)은 2바이트

[ 파일 입출력 ] : 파일에 데이터를 입력하고 출력하는 작업
               - 파일 입출력과 관련된 클래스 / 인터페이스
               - ★사용이유 : 자바에서 다루는 데이터를 영구저장 하기 위해서 자바 외부에 저장하는 기술

            1. FileOutputStream(클래스)
            : FileOutputStream 객체변수명 = new FileOutPutStream(파일경로), 일반예외(예외필수)
                1) .write( 출력할 바이트배열 ) : 현재 연동된 파일에 쓰기(출력) 하는 함수

            2. FileInputStream(클래스)
            : FileInputStream 객체변수명 = new FileInputStream(파일경로)
                1) .read(바이트 배열) : 현재 연동된 파일에 바이트 단위로 데이터를 읽어오는 함수

[ 파일 관련 클래스 ]
    - File 클래스 메소드
        1) .isFile() : 지정한 경로의 파일이 존재하는지 반환 함수
        2) .getName() : 지정한 파일의 이름은 반환 함수
        3) .length() : 지정한 파일의 용량(바이트)를 반환 함수
        4) .exists() : 지정한 경로에 파일의 존재여부 t/f 반환 함수
        5) .createNewFile() : 지정한 경로에 파일 생성하는 함수, 성공시 true & 실패시 false

[ 경로 ]
    1. 절대 경로 : 지정한 파일의 위치한 경로를 모두 작성한 경우
        ex) D:\김현수\kor2024_2\srd

    2. 상대 경로 : 지정한 파일의 위치한 경로를 ★현재 위치 기준★으로 작성한 경우
        - ./ : 현재 위치를 뜻한다.
        - ../ : 상위 위치를 뜻한다.
        (현재클래스 - Day25 위치했을 때) > (D:\김현수\프로젝트명\)생략 = ./src/Day25/test1.txt


[ 기타 참고 함수 ]
    - "문자열".getBytes() : 문자열을 바이트 배열로 변환 해주는 함수
    - new String(바이트 배열) : 바이트배열을 문자열로 반환 해주는 객체 생성자

※ 객체를 사용하는 이유 : 메소드(멤버함수) 사용하기 위해서
※ 객체없이 메소드를 사용할 수 있나요? > static 메소드 이면 가능하다
※ 메소드는 왜 사용하죠 > 자바회사에 미리 제종한 코드들의 집합(라이브러리) 중 일종인 메소드를 사용하면
                      개발이 가능하니까.

[ 예외란? ] : 개발자 또는 사용자의 부주의로 프로그램이 종료되는 상황
    - 종류
        1) 일반 예외(컴파일/코드번역 과정에거 코드를 검사하는 예외)
        2) 실행 예외(컴파일/코드번역 과정에서 코드를 검사하지 않는 예외)