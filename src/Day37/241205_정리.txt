* 메소드(객체안에 있는 함수) / 함수

* 함수(Function)란?
    - 함(상자 함), 수(셈 수)  : 수를 담는 상자 -> 누군가가 미리 상자에 수를 넣었다.
    - 1차함수(y=ax+b) / 공식 -> 장점 : 계산이 빠르고 재사용이 좋다.
    - 컴퓨터 함수 : 누군가가 미리 상자에 코드를 넣었다.

1. 함수란 : 미리 작성된 명령어(코드)를 호출함으로써 재사용 가능한 코드 공간
    VS 변수란 : 미리 하나의 값을 저장할 수 있는 공간

2. 사용목적
    1) 재활용/사용 (코드 간소화)
    2) 2번 이상의 반복되는 코드를 하나로 할 수 있다.
    3) 메모리 효율성이 좋다 ( 지역변수 ? {} 안에서 선언된 변수는 {} 끝까지 초기화/사라짐 )
        + 함수가 실행되는 도중에만 변수를 사용하므로
    4) 결과/반환/리턴는 무조건 1개를 가질 수 있다. JAVA는 void(없다) 도 있다.
    5) 매개변수의 값에 따라 서로 다른 결과를 만들어낼 수 있다.
        ex) 주스
        ----->             믹서기 함수(주스 만들기용)             -----> 결과(return)              -----> 리턴값 저장
        사과, 물(인수값)               처리                            사과주스                       int 컵 = 믹서기함수('사과')

        ex) 자판기
        ----->                          결과
        돈, 제품선택번호(인수값)          제품, 잔돈

3. 중요한 용어
    1) 인수 : 함수 안으로 들어가는 수(값)
        - 함수 호출 방법 : 함수명(인수1, 인수2);
    2) 매개변수 : 함수 호출시 인수 값을 각 변수들에 대입받는 변수 (인수 <-- 중매 --> 변수)
        - 인수값의 타입과 매개변수의 타입이 일치해야한다. +(일치하지 않는 경우 : 타입변환 -> 다형성)
    3) 리턴값 : 함수가 종료되면서 하수를 호출했던 곳으로 반환할 값의 타입
        - 반환값이 없을 때는 void로 작성한다.
    4) 반환값 : 함수가 종료되면서 함수를 호출했던 곳으로 반환할 값
        - 반환값은 항상 1개의 값 또는 값이 없다(void).
        - 여러개를 반환시 (배열, 컬렉션프레임워크, 객체)

4. 기본 함수 형태
    반환타입 함수명 (타입 매개변수1, 타입 매개변수2) {
        실행문(코드); 실행문(코드); 실행문(코드);
        return 반환값[반환타입과 일치한 값];
    }

5. 함수의 실행순서
    BoardView.getInstance().mainPage();
        - BoardView.getInstance()
            - [반환값] boardView.mainPage()
                - [반환값] void

    유재석.공부하기().밥먹기()
        - 유재석.공부하기() --> 공부한 유재석
            - 공부한유재석.밥먹기()
                - [반환값] 공부하고 밥먹은 유재석

    유재석.밥먹기(공부하기())
        - 공부하기()
            --> 공부결과반환
                --> 유재석.밥먹기(공부결과반환)

    ps.setInt(2, updateDto.getNum());
        - getNum()한 결과를 setInt() 매개변수에 인수로 전달
    유재석.밥먹기(공부하기())
        - 공부하기()한 결과를 밥먹기() 매개변수에 인수로 전달