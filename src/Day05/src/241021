배열
1. 배열이란?
- ★ 같은 자료형 (공간의 크기가 동일)
- ★ 물리적인 나열 구조 (순차 자료 구조)
=-

2. 배열 선언과 초기화
   자료형[ ] 배열명 = new 자료형 [공간의 갯수];	-> 이 문법을 권장하는 편
   자료형 배열명[ ] = new 자료형 [공간의 갯수];

※ 참고) new 연산자 : 메모리 할당 / 메모리에 공간 생성

3. 배열 사용하기
- 인덴스 연산자
   [ ] : 배열 공간의 위치를 계산해 주는 연산자

※ 참고) 인덱스 : 0부터 시작하는 순서

※ 참조 변수 : 주소를 참고해서 자원을 접근하는 변수 > 객체 할 때 더 나옴

* 기본 자료형 : 초기값
- 정수형 자료형 (bite, short, int, long) -> 0
- 실수형 자료형 (float, double) -> 0.0
- 논리형 자료형 (boolean) -> false

* 참조 자료형
- ex) String - 초기값 null
- null : 값이 없는 상태

4. 전체 배열 길이와 유효한 값
- 모든 배열 : length - 공간의 갯수

5. 향상된 for문과 배열
- 많은 값을 가지고 하는 작업, 처음부터 끝까지 반복하는게 많다!
- 좀 더 단순한 표기법

for (반복 요소 : 배열(컬렉션)) {

}

6. 다차원배열
- 선(1차원), 면(2차원), 입체(3차원)

* 2차원 배열 선언
- 자료형[ ][ ] 배열명 = new 자료형[행][열];

* 선언과 동시에 초기화
- 자료형[ ][ ] 배열명 = new 자료형[ ][ ] {{ 값1, 값2, 값3 }, { 값1, 값2, 값3 }, ...};
- 자료형[ ][ ] 배열명 = {{ 값1, 값2, 값3 }, { 값1, 값2, 값3 }, ...};  > 여기를 많이 사용